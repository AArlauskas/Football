openapi: "3.0.0"
info:
  version: 1.0.0
  title: Football
servers:
  - url: "https://grybeliai.eu/api"
  - url: "http://localhost:8080/api"
paths:
  /version:
    get:
      summary: The version and local time of the server
      operationId: version
      tags:
        - meta
      responses:
        '200':
          description: A server is alive and able to respond to requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Version"
  /games:
    get:
      summary: List of upcomming and yet-to-happen games
      operationId: games
      tags:
        - game
      parameters:
        - name: filter
          in: query
          required: false
          schema:
            type: string
            enum: [all, today, closed]
            description: >
              How to filter the games (not yet implemented):
                * `all` - Return all known games (default)
                * `today` - Return all games from today (and newer). Returned games can be upcoming, locked or already done
                * `closed` - Return games that already finished or are closed
      responses:
        '200':
          description: A list of games ordered from oldest to youngest. Depending on the status of the game the outcome might be present
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Games"



components:
  schemas:
    Identifier:
      type: integer
      format: int64
      description: "An entity identifier"
    DateTime:
      type: string
      description: "A date and time in ISO local date time format"
      example: "2021-05-26T18:42:02.154979414Z"
    Date:
      type: string
      description: "A date"
      example: "2021-05-26"
    Time:
      type: string
      description: "A time (with minute precision)"
      example: "18:42"

    Version:
      type: object
      required:
        - version
        - datetime
      properties:
        version:
          type: string
        datetime:
          $ref: "#/components/schemas/DateTime"
    Team:
      type: object
      properties:
        code:
          type: string
          description: "A three letter country code"
          example: "LTU"
          maxLength: 3
          minLength: 3
        name:
          type: string
          description: "A full country name"
          example: "Lietuva"
    Result:
      type: object
      properties:
        goals1:
          type: integer
          description: "Goals scored by the first team"
          example: 2
        goals2:
          type: integer
          description: "Goals scored by the second team"
          example: 1

    GameState:
      type: string
      enum: [open, locked, finished]
      description: >
        A state of a game:
          * `open` - The game hasn't started yet and it's outcome can still be guessed
          * `closed` - The game has started (or is about to start) and it's outcome cannot be guessed, but result is not yet known
          * `finished` - The game has finished and it's result is known
    Game:
      type: object
      properties:
        id:
          allOf:
            - $ref: "#/components/schemas/Identifier"
          description: "Game object identifier"
        team1:
          allOf:
            - $ref: "#/components/schemas/Team"
          description: "First team of a game"
        team2:
          allOf:
            - $ref: "#/components/schemas/Team"
          description: "Second team of a game"
        date:
          allOf:
            - $ref: "#/components/schemas/Date"
          description: "Date of the game"
        time:
          allOf:
            - $ref: "#/components/schemas/Time"
          description: "Time of the game"
        state:
          allOf:
            - $ref: "#/components/schemas/GameState"
          description: "State of the game. If it's `finished` the result will be present"
        result:
          allOf:
            - $ref: "#/components/schemas/Result"
          description: "Result of the game. Present only if state is `finished`.
          nullable: true


